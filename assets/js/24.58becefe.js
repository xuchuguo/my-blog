(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{474:function(e,v,_){"use strict";_.r(v);var t=_(4),o=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h2",{attrs:{id:"生命周期"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[e._v("#")]),e._v(" 生命周期")]),e._v(" "),_("p",[e._v("在"),_("code",[e._v("new Vue()")]),e._v("之后。"),_("code",[e._v("Vue")]),e._v("会调用"),_("code",[e._v("_init")]),e._v("函数进行初始化，也就是这里的"),_("code",[e._v("init")]),e._v("过程，它会初始化生命周期、事件、 props、 methods、 data、 computed 与 watch 等。其中最重要的是通过"),_("code",[e._v("Object.defineProperty")]),e._v("设置"),_("code",[e._v("setter")]),e._v("与"),_("code",[e._v("getter")]),e._v("函数，用来实现「响应式」以及「依赖收集」。")]),e._v(" "),_("p",[e._v("vue生命周期总共分为8个")]),e._v(" "),_("ol",[_("li",[_("p",[_("strong",[e._v("beforeCreate")]),e._v(" (创建前)在beforeCreat阶段，vue实例的挂载元el还没有。")]),e._v(" "),_("p",[e._v("vue实例的挂载元素"),_("code",[e._v("$el")]),e._v("和数据对象 "),_("code",[e._v("data")]),e._v("都是"),_("code",[e._v("undefined")]),e._v(", 还未初始化")])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("created")]),e._v(" (创建后) 完成了 data数据初始化, el还未初始化")])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("beforeMount")]),e._v(" (载入前) vue实例的"),_("code",[e._v("$el")]),e._v("和"),_("code",[e._v("data")]),e._v("都初始化了, 相关的render函数首次被调用。")]),e._v(" "),_("p",[e._v("实例已完成以下的配置：编译模板，把data里面的数据和模板生成html。注意此时还没有挂载html到页面上。")])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("mounted")]),e._v(" (载入后) 在"),_("code",[e._v("el")]),e._v("被新创建的"),_("code",[e._v("vm.$el")]),e._v("替换，并挂载到实例上去之后调用。实例已完成以下的配置：用上面编译好的"),_("code",[e._v("html")]),e._v("内容替换"),_("code",[e._v("el")]),e._v("属性指向的"),_("code",[e._v("DOM对象")]),e._v("。完成模板中的html渲染到html页面中。此过程中进行ajax交互。")]),e._v(" "),_("p",[e._v("在beforeMount阶段，vue实例的"),_("code",[e._v("$el")]),e._v("和"),_("code",[e._v("data")]),e._v("都初始化了，但还是挂载之前为虚拟的dom节点，data.message还未替换。在mounted阶段，vue实例挂载完成，data.message成功渲染。")])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("beforeUpdate")]),e._v(" (更新前) 在数据更新之前调用，发生在虚拟DOM重新渲染和打补丁之前。可以在该钩子中进一步地更改状态，不会触发附加的重渲染过程。")])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("updated")]),e._v(" (更新后) 在由于数据更改导致的虚拟DOM重新渲染和打补丁之后调用。调用时，组件DOM已经更新，所以可以执行依赖于DOM的操作。然而在大多数情况下，应该避免在此期间更改状态，因为这可能会导致更新无限循环。该钩子在服务器端渲染期间不被调用。当data变化时，会触发beforeUpdate和updated方法。")])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("beforeDestroy")]),e._v(" (销毁前) 在实例销毁之前调用。实例仍然完全可用。")])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("destroyed")]),e._v(" (销毁后) 在实例销毁之后调用。调用后，所有的事件监听器会被移除，所有的子实例也会被销毁。该钩子在服务器端渲染期间不被调用。")]),e._v(" "),_("p",[e._v("在执行destroy方法后，对data的改变不会再触发周期函数，说明此时vue实例已经解除了事件监听以及和dom的绑定，但是dom结构依然存在。")])])])])}),[],!1,null,null,null);v.default=o.exports}}]);